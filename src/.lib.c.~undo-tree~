(undo-tree-save-format-version . 1)
"ff9f6fd475922113f8c49c394530a0b7892d3dbf"
[nil nil nil nil (26002 41206 281887 499000) 0 nil]
([nil nil ((nil rear-nonsticky nil 873 . 874) (nil fontified nil 873 . 874) (nil fontified nil 826 . 873) (nil fontified nil 825 . 826) (nil fontified nil 775 . 825) (nil fontified nil 774 . 775) (nil fontified nil 728 . 774) (nil fontified nil 727 . 728) (nil fontified nil 670 . 727) (nil fontified nil 669 . 670) (nil fontified nil 639 . 669) (nil fontified nil 638 . 639) (nil fontified nil 615 . 638) (nil fontified nil 614 . 615) (nil fontified nil 584 . 614) (nil fontified nil 583 . 584) (nil fontified nil 556 . 583) (nil fontified nil 555 . 556) (nil fontified nil 533 . 555) (nil fontified nil 532 . 533) (nil fontified nil 510 . 532) (nil fontified nil 509 . 510) (nil fontified nil 476 . 509) (nil fontified nil 475 . 476) (nil fontified nil 453 . 475) (nil fontified nil 452 . 453) (nil fontified nil 423 . 452) (nil fontified nil 422 . 423) (nil fontified nil 396 . 422) (nil fontified nil 395 . 396) (nil fontified nil 369 . 395) (nil fontified nil 368 . 369) (nil fontified nil 335 . 368) (nil fontified nil 334 . 335) (nil fontified nil 312 . 334) (nil fontified nil 311 . 312) (nil fontified nil 287 . 311) (nil fontified nil 286 . 287) (nil fontified nil 260 . 286) (nil fontified nil 259 . 260) (nil fontified nil 233 . 259) (nil fontified nil 232 . 233) (nil fontified nil 230 . 232) (nil fontified nil 192 . 230) (nil fontified nil 191 . 192) (nil fontified nil 125 . 191) (nil fontified nil 124 . 125) (nil fontified nil 98 . 124) (nil fontified nil 97 . 98) (nil fontified nil 75 . 97) (nil fontified nil 74 . 75) (nil fontified nil 43 . 74) (nil fontified nil 42 . 43) (nil fontified nil 22 . 42) (nil fontified nil 21 . 22) (nil fontified nil 20 . 21) (nil fontified nil 2 . 20) (nil fontified nil 1 . 2) (1 . 874) (t . -1)) nil (26002 41206 281879 559000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1085 . 1086) (nil fontified nil 874 . 1086) (874 . 1086)) nil (26002 41206 281853 776000) 0 nil])
([nil nil ((1084 . 1087)) nil (26002 41206 281848 923000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3170 . 3171) (nil fontified nil 2621 . 3171) (nil fontified nil 2620 . 2621) (nil fontified nil 1977 . 2620) (nil fontified nil 1976 . 1977) (nil fontified nil 1087 . 1976) (1087 . 3171)) nil (26002 41206 281837 454000) 0 nil])
([nil nil ((1086 . 1094) (1085 . 1086) (t 26002 41206 319139 631000)) nil (26002 41369 496745 865000) 0 nil])
([nil nil ((#("Node get
" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 1086) (undo-tree-id4 . -7) (undo-tree-id5 . 1) (undo-tree-id6 . -8) 1093) nil (26002 41369 496742 82000) 0 nil])
([nil nil ((#("Node " 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t)) . 1089) (undo-tree-id3 . -4)) nil (26002 41369 496733 939000) 0 nil])
([nil nil ((1089 . 1094)) nil (26002 41369 496729 618000) 0 nil])
([nil nil ((1100 . 1102) (1087 . 1100)) nil (26002 41369 496726 841000) 0 nil])
([nil nil ((#("void get_node()
" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t face font-lock-function-name-face) 6 7 (fontified t face font-lock-function-name-face) 7 8 (fontified t face font-lock-function-name-face) 8 9 (fontified t face font-lock-function-name-face) 9 10 (fontified t face font-lock-function-name-face) 10 11 (fontified t face font-lock-function-name-face) 11 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t face font-lock-function-name-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 16 (fontified t)) . 1087) (undo-tree-id0 . -13) (undo-tree-id1 . 2) (undo-tree-id2 . -15) 1100) nil (26002 41369 496721 818000) 0 nil])
([nil nil ((1086 . 1089)) nil (26002 41369 496676 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1426 . 1427) (nil fontified nil 1086 . 1427) (1086 . 1427)) nil (26002 41369 496672 307000) 0 nil])
([nil nil ((1426 . 1433) (1427 . 1428)) nil (26002 41369 496659 852000) 0 nil])
([nil nil ((apply -66 1086 1505 undo--wrap-and-run-primitive-undo 1086 1505 ((1498 . 1501) (1486 . 1489) (1482 . 1485) (1456 . 1459) (1452 . 1455) (1427 . 1430) (1421 . 1424) (1350 . 1353) (1346 . 1349) (1314 . 1317) (1302 . 1305) (1232 . 1235) (1228 . 1231) (1197 . 1200) (1192 . 1195) (1166 . 1169) (1162 . 1165) (1138 . 1141) (1134 . 1137) (1107 . 1110) (nil face (rainbow-delimiters-depth-1-face) 1103 . 1106) (nil fontified t 1103 . 1106) (1103 . 1106) (1086 . 1089))) (t 26002 41369 509089 651000)) nil (26002 41452 711054 172000) 0 nil])
([nil nil ((#("

/* void get_node( */
/* 	      Node* node_class, */
/* 	      char*nodename, */
/* 	      char* namespace, */

/* 	      char* publisher_name, */
/* 	      const rosidl_message_type_support_t* publisher_message_type, */
	      
/* 	      char* subscriber_name, */
/* 	      const rosidl_message_type_support_t* subscriber_message_type, */


/* 	      int timeout_ms, */
/* 	      uint8_t attempts */
/* 	      ); */

" 0 1 (fontified t) 1 2 (fontified t) 2 3 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 5 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 5 8 (fontified t c-in-sws t face font-lock-comment-face) 8 9 (fontified t c-in-sws t face font-lock-comment-face) 9 10 (fontified t c-in-sws t face font-lock-comment-face) 10 18 (fontified t c-in-sws t face font-lock-comment-face) 18 19 (fontified t c-in-sws t face font-lock-comment-face) 19 21 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 21 22 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 22 23 (fontified t c-in-sws t) 23 26 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 26 33 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 33 37 (fontified t c-in-sws t face font-lock-comment-face) 37 39 (fontified t c-in-sws t face font-lock-comment-face) 39 49 (fontified t c-in-sws t face font-lock-comment-face) 49 50 (fontified t c-in-sws t face font-lock-comment-face) 50 53 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 53 54 (fontified t c-in-sws t) 54 57 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 57 64 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 64 68 (fontified t c-in-sws t face font-lock-comment-face) 68 69 (fontified t c-in-sws t face font-lock-comment-face) 69 77 (fontified t c-in-sws t face font-lock-comment-face) 77 78 (fontified t c-in-sws t face font-lock-comment-face) 78 81 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 81 82 (fontified t c-in-sws t) 82 85 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 85 92 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 92 96 (fontified t c-in-sws t face font-lock-comment-face) 96 98 (fontified t c-in-sws t face font-lock-comment-face) 98 107 (fontified t c-in-sws t face font-lock-comment-face) 107 108 (fontified t c-in-sws t face font-lock-comment-face) 108 111 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 111 113 (fontified t c-in-sws t) 113 116 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 116 123 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 123 127 (fontified t c-in-sws t face font-lock-comment-face) 127 129 (fontified t c-in-sws t face font-lock-comment-face) 129 143 (fontified t c-in-sws t face font-lock-comment-face) 143 144 (fontified t c-in-sws t face font-lock-comment-face) 144 147 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 147 148 (fontified t c-in-sws t) 148 151 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 151 158 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 158 163 (fontified t c-in-sws t face font-lock-comment-face) 163 164 (fontified t c-in-sws t face font-lock-comment-face) 164 193 (fontified t c-in-sws t face font-lock-comment-face) 193 195 (fontified t c-in-sws t face font-lock-comment-face) 195 217 (fontified t c-in-sws t face font-lock-comment-face) 217 218 (fontified t c-in-sws t face font-lock-comment-face) 218 221 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 221 230 (fontified t c-in-sws t) 230 233 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 233 240 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 240 244 (fontified t c-in-sws t face font-lock-comment-face) 244 246 (fontified t c-in-sws t face font-lock-comment-face) 246 261 (fontified t c-in-sws t face font-lock-comment-face) 261 262 (fontified t c-in-sws t face font-lock-comment-face) 262 265 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 265 266 (fontified t c-in-sws t) 266 269 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 269 276 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 276 281 (fontified t c-in-sws t face font-lock-comment-face) 281 282 (fontified t c-in-sws t face font-lock-comment-face) 282 311 (fontified t c-in-sws t face font-lock-comment-face) 311 313 (fontified t c-in-sws t face font-lock-comment-face) 313 336 (fontified t c-in-sws t face font-lock-comment-face) 336 337 (fontified t c-in-sws t face font-lock-comment-face) 337 340 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 340 343 (fontified t c-in-sws t) 343 346 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 346 353 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 353 356 (fontified t c-in-sws t face font-lock-comment-face) 356 357 (fontified t c-in-sws t face font-lock-comment-face) 357 367 (fontified t c-in-sws t face font-lock-comment-face) 367 368 (fontified t c-in-sws t face font-lock-comment-face) 368 371 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 371 372 (fontified t c-in-sws t) 372 375 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 375 382 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 382 389 (fontified t c-in-sws t face font-lock-comment-face) 389 390 (fontified t c-in-sws t face font-lock-comment-face) 390 398 (fontified t c-in-sws t face font-lock-comment-face) 398 401 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 401 402 (fontified t c-in-sws t) 402 403 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 403 405 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 405 412 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 412 413 (fontified t rear-nonsticky t c-in-sws t face font-lock-comment-face) 413 414 (fontified t c-in-sws t face font-lock-comment-face) 414 417 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 417 418 (fontified t c-in-sws t) 418 419 (fontified t c-in-sws t)) . 1084) (undo-tree-id7 . 2) (undo-tree-id8 . -418) (undo-tree-id9 . -418) (undo-tree-id10 . -418) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -10) (undo-tree-id22 . -10) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . -10) (undo-tree-id29 . -10) (undo-tree-id30 . -10) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -10) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -418) (t 26002 41452 722098 894000)) nil (26002 41983 704820 101000) 0 nil])
([nil nil ((901 . 902) (nil syntax-table nil 901 . 902) (nil syntax-table (1) 882 . 883) (#("\"" 0 1 (fontified nil face font-lock-string-face c-in-sws t)) . -901) (901 . 902) (nil syntax-table nil 901 . 902) (nil syntax-table (1) 882 . 883) (900 . 901) (nil syntax-table nil 900 . 901) (nil syntax-table (1) 882 . 883) (899 . 900) (nil syntax-table nil 899 . 900) (nil syntax-table (1) 882 . 883) (898 . 899) (nil syntax-table nil 898 . 899) (nil syntax-table (1) 882 . 883) (897 . 898) (nil syntax-table nil 897 . 898) (nil syntax-table (1) 882 . 883) (896 . 897) (nil syntax-table nil 896 . 897) (nil syntax-table (1) 882 . 883) (892 . 896) (nil syntax-table nil 892 . 893) (nil syntax-table (1) 882 . 883) (#("ms" 0 2 (fontified nil)) . 892) (nil syntax-table nil 894 . 895) (nil syntax-table (1) 882 . 883) (892 . 894) (nil syntax-table nil 892 . 893) (nil syntax-table (1) 882 . 883) (#("msg/" 0 4 (fontified nil)) . -892) (nil syntax-table nil 896 . 897) (nil syntax-table (1) 882 . 883) (892 . 896) (nil syntax-table nil 892 . 893) (nil syntax-table (1) 882 . 883) (#("ms" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face c-in-sws t)) . -892) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (nil syntax-table nil 894 . 895) (nil syntax-table (1) 882 . 883) (893 . 894) (nil syntax-table nil 893 . 894) (nil syntax-table (1) 882 . 883) (892 . 893) (nil syntax-table nil 892 . 893) (nil syntax-table (1) 882 . 883) (883 . 892) (nil syntax-table nil 883 . 884) (nil syntax-table (1) 882 . 883) (#("s\"" 0 1 (c-in-sws t fontified nil) 1 2 (fontified nil face font-lock-string-face c-in-sws t)) . 883) (undo-tree-id55 . -2) (883 . 884) (#("std_msgs/" 0 9 (c-in-sws t fontified nil)) . -883) (883 . 892) (#("std_ms" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face) 3 4 (fontified t c-in-sws t face font-lock-string-face) 4 5 (fontified t c-in-sws t face font-lock-string-face) 5 6 (fontified t c-in-sws t face font-lock-string-face)) . -883) (undo-tree-id56 . -3) (undo-tree-id57 . -6) (undo-tree-id58 . -6) 889 (883 . 889) (883 . 884) (nil syntax-table nil 883 . 884) (nil syntax-table (1) 882 . 883) (882 . 883) (#("\"" 0 1 (fontified nil)) . -882) (nil syntax-table nil 883 . 884) (nil syntax-table (1) 882 . 883) (882 . 883) (874 . 882) (873 . 874) (872 . 873) (t 26002 41985 528708 759000)) nil (26002 61056 879789 511000) 0 nil] [nil nil ((#("#include <stdio.h>
" 0 1 (fontified t face font-lock-preprocessor-face c-is-sws t c-in-sws t) 1 8 (fontified t face font-lock-preprocessor-face c-in-sws t) 8 9 (fontified t c-in-sws t) 9 10 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) category c-<-as-paren-syntax c-in-sws t) 10 17 (fontified t face font-lock-string-face c-in-sws t) 17 18 (fontified t face (rainbow-delimiters-depth-1-face font-lock-string-face) category c->-as-paren-syntax c-in-sws t) 18 19 (fontified t c-in-sws t)) . 1) (undo-tree-id37 . -18) (undo-tree-id38 . -17) (undo-tree-id39 . -17) (undo-tree-id40 . -17) (undo-tree-id41 . -17) (undo-tree-id42 . -17) (undo-tree-id44 . -19) (undo-tree-id46 . -19) (undo-tree-id48 . -19) (undo-tree-id50 . -19) (t 26002 41601 15916 752000)) ((1 . 20) (t 26002 41945 180202 104000)) (26002 41945 167848 540000) 0 nil])
([nil nil ((902 . 903)) nil (26002 61056 879755 61000) 0 nil])
nil
([nil nil ((902 . 903) (#("l" 0 1 (fontified t c-in-sws t)) . -902) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 903) nil (26002 61056 879746 314000) 0 nil])
([nil nil ((#("Twist" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face) 3 5 (fontified t c-in-sws t face font-lock-string-face)) . 896) (undo-tree-id59 . -4) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -5) (t 26002 61056 916201 266000)) nil (26002 61067 183207 260000) 0 nil])
([nil nil ((901 . 903) (896 . 901)) nil (26002 61067 183012 461000) 0 nil])
([nil nil ((#("std" 0 3 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id101 . -2) (t 26002 61067 195082 349000)) nil (26002 61202 863482 59000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . 883)) nil (26002 61202 863475 140000) 0 nil])
([nil nil ((#("msgs" 0 4 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id100 . -3)) nil (26002 61202 863471 970000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id99 . -1)) nil (26002 61202 863465 977000) 0 nil])
([nil nil ((#("msg" 0 3 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id97 . -2) (undo-tree-id98 . -3)) nil (26002 61202 863460 126000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id96 . -1)) nil (26002 61202 863451 808000) 0 nil])
([nil nil ((#("twist" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face) 3 4 (fontified t c-in-sws t face font-lock-string-face) 4 5 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id94 . -4) (undo-tree-id95 . -5)) nil (26002 61202 863445 721000) 0 nil])
([nil nil ((#("." 0 1 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id92 . -1) (undo-tree-id93 . -1)) nil (26002 61202 863437 789000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . 883) (undo-tree-id91 . -1)) nil (26002 61202 863431 131000) 0 nil])
([nil nil ((901 . 909) (nil syntax-table nil 901 . 902) (nil syntax-table (1) 882 . 883) (#("t" 0 1 (fontified nil)) . 901) (nil syntax-table nil 902 . 903) (nil syntax-table (1) 882 . 883) (901 . 902) (nil syntax-table nil 901 . 902) (nil syntax-table (1) 882 . 883) (#("twist.h\"" 0 8 (c-in-sws t fontified nil)) . -901) (901 . 909) (nil syntax-table nil 901 . 902) (nil syntax-table (1) 882 . 883) (#("tw" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face c-in-sws t)) . -901) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (nil syntax-table nil 903 . 904) (nil syntax-table (1) 882 . 883) (902 . 903) (nil syntax-table nil 902 . 903) (nil syntax-table (1) 882 . 883) (901 . 902) (nil syntax-table nil 901 . 902) (nil syntax-table (1) 882 . 883) (#("T" 0 1 (fontified t face font-lock-string-face c-in-sws t)) . -901) (undo-tree-id84 . -1) (nil syntax-table nil 902 . 903) (nil syntax-table (1) 882 . 883) (901 . 902) (nil syntax-table nil 901 . 902) (nil syntax-table (1) 882 . 883) (897 . 901) (nil syntax-table nil 897 . 898) (nil syntax-table (1) 882 . 883) (#("ms;" 0 2 (fontified nil) 2 3 (fontified nil face font-lock-string-face)) . 897) (undo-tree-id85 . 1) (nil syntax-table nil 900 . 901) (nil syntax-table (1) 882 . 883) (897 . 899) (nil syntax-table nil 898 . 899) (nil syntax-table (1) 882 . 883) (#("msg/" 0 4 (fontified nil)) . -897) (nil syntax-table nil 902 . 903) (nil syntax-table (1) 882 . 883) (897 . 901) (nil syntax-table nil 898 . 899) (nil syntax-table (1) 882 . 883) (#("ms" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face c-in-sws t)) . -897) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (nil syntax-table nil 900 . 901) (nil syntax-table (1) 882 . 883) (898 . 899) (nil syntax-table nil 899 . 900) (nil syntax-table (1) 882 . 883) (897 . 898) (nil syntax-table nil 898 . 899) (nil syntax-table (1) 882 . 883) (883 . 897) (nil syntax-table nil 884 . 885) (nil syntax-table (1) 882 . 883) (#("g\"" 0 1 (c-in-sws t fontified nil) 1 2 (fontified nil face font-lock-string-face c-in-sws t)) . 883) (undo-tree-id88 . 1) (883 . 884) (#("geometry_msgs/" 0 14 (c-in-sws t fontified nil)) . -883) (883 . 897) (#("g" 0 1 (fontified t c-in-sws t face font-lock-string-face)) . -883) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 884 (883 . 884)) nil (26002 61202 863411 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 910 . 911) (#("
" 0 1 (c-in-sws t fontified nil)) . -962) (910 . 963) (t 26002 61202 871650 836000)) nil (26002 61456 368105 208000) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t c-in-sws t rear-nonsticky t)) . 910)) nil (26002 61456 368096 479000) 0 nil])
([nil nil ((961 . 963)) nil (26002 61456 368084 397000) 0 nil])
([nil nil ((972 . 981) (972 . 973) (nil syntax-table nil 972 . 973) (nil syntax-table (1) 971 . 972) (971 . 972) (#("\"" 0 1 (fontified nil)) . -971) (nil syntax-table nil 972 . 973) (nil syntax-table (1) 971 . 972) (966 . 972) (963 . 966) (962 . 963) (961 . 962) (t 26002 61456 381620 572000)) nil (26002 62406 948900 661000) 0 nil])
([nil nil ((982 . 983)) nil (26002 62406 948889 930000) 0 nil])
([nil current ((#(";" 0 1 (fontified t c-in-sws t)) . -982) (undo-tree-id102 . -1) (undo-tree-id103 . -1) 983) nil (26002 62406 948878 889000) 0 nil])
nil
